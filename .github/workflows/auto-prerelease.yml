name: auto-prerelease

on:
  schedule:
    - cron: '0 0 */15 * *' # every 15 days at midnight
  
jobs:
  pre-release:

    runs-on: ubuntu-latest

    steps:
      # see if uswds version has changed since last nasawds release. if not, do nothing.

      #checkout develop branch
      - uses: actions/checkout@v1
        with:
          ref: develop
      # https://github.com/actions/setup-node
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: https://registry.npmjs.org/

      - run: npm install
      # if npm outdated --parseable contains 'uswds:uswds' then exit code will be 0 and CI workflow will continue, otherwise exit code will be 1 and CI workflow will not continue.
      # https://stackoverflow.com/questions/12375722/how-do-i-test-in-one-line-if-command-output-contains-a-certain-string

      - run: npm outdated --parseable | grep -q uswds:uswds
      - run: npm update uswds
      - name: update npm package versioning
        #https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env
        run: echo "RELEASE_VERSION=$(npm --no-git-tag-version version prerelease --preid=beta)" >> $GITHUB_ENV
        #run: echo "::set-env name=RELEASE_VERSION::$(npm --no-git-tag-version version prerelease --preid=beta)"  # updates package.json version number from 3.0.0 to 3.0.1-beta.0
  #https://github.com/ad-m/github-push-action
      - uses: stefanzweifel/git-auto-commit-action@v2.3.0
        with:
          commit_message: Updated uswds package to latest version
          branch: develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #https://github.com/actions/create-release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          body: |
            Changes in this Release
            - uswds package updated to latest version
          draft: false
          prerelease: true

      - run: npm run release
      - run: echo "RELEASE_ASSET_PATH=$(find . -name "nasawds-*.zip")" >> $GITHUB_ENV
      #- run: echo "::set-env name=RELEASE_ASSET_PATH::$(find . -name "nasawds-*.zip")"
      # https://askubuntu.com/a/682130
      - run: echo "RELEASE_ASSET_NAME=$(echo ${RELEASE_ASSET_PATH:2})" >> $GITHUB_ENV
      #- run: echo "::set-env name=RELEASE_ASSET_NAME::$(echo ${RELEASE_ASSET_PATH:2})"

      #https://github.com/actions/upload-release-asset
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.RELEASE_ASSET_PATH }}
          asset_name: ${{ env.RELEASE_ASSET_NAME }}
          asset_content_type: application/zip
      #https://github.com/actions/starter-workflows/blob/master/ci/npm-publish.yml
      # remove .zip file
      - run: rm -rf ${{ env.RELEASE_ASSET_PATH }}
      - run: npm publish --tag beta
        env:
          # https://stackoverflow.com/questions/57685065/how-to-set-secrets-in-github-actions
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}